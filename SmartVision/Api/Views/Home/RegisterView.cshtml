@model Objects.Person.ContactPerson
@{
    Layout = "";
    ViewBag.Title = "Smart Vision";
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="~/Content/Contact-Form-Clean.css">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @* @Styles.Render("~/Content/template/css")
        @Scripts.Render("~/bundles/modernizr")*@
    <meta charset="utf-8">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/png" href="~/img/logo-black.png">
    <!--Google Fonts link-->
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Crimson+Text:400,400i,600,600i,700,700i" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Roboto+Condensed:300,300i,400,400i,700,700i" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.8/css/all.css">


    <link rel="stylesheet" href="~/Content/template/slick.css">
    <link rel="stylesheet" href="~/Content/template/slick-theme.css">
    <link rel="stylesheet" href="~/Content/template/animate.css">
    <link rel="stylesheet" href="~/Content/template/fonticons.css">

    <link rel="stylesheet" href="~/Content/template/bootstrap.css">
    <link rel="stylesheet" href="~/Content/template/magnific-popup.css">
    <link rel="stylesheet" href="~/Content/template/bootsnav.css">

    <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <link rel="stylesheet" href="~/Content/template/font-awesome.min.css">
    <!--For Plugins external css-->
    <!--<link rel="stylesheet" href="assets/css/plugins.css" />-->
    <!--Theme custom css -->

    <link rel="stylesheet" href="~/Content/assets/css/style.css">

    <!--<link rel="stylesheet" href="assets/css/colors/maron.css">-->
    <!--Theme Responsive css-->
    <link rel="stylesheet" href="~/Content/template/responsive.css" />
    <script src="~/Scripts/template/vendor/modernizr-2.8.3-respond-1.4.2.min.js"></script>
    <script src='https://www.google.com/recaptcha/api.js'></script>
</head>

@*<script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>*@
<!------ Include the above in your HEAD tag ---------->
<body>
    <!-- Preloader -->
    <div id="loading">
        <div id="loading-center">
            <div id="loading-center-absolute">
                <div class="object" id="object_one"></div>
                <div class="object" id="object_two"></div>
                <div class="object" id="object_three"></div>
                <div class="object" id="object_four"></div>
            </div>
        </div>
    </div>
    <!--End off Preloader -->
    <div class="center">
        <a class="navbar-brand" href="~/Home/Index">
            <img src="~/img/logo.png" class="logo-display" alt="">
        </a>
    </div>
    <div class="contact-clean" style="background-color: #1e3f5a;">
        <br />
        <br />
        <br /><br /><br />
        @using (Html.BeginForm("CaptchaVerificationRegister", "Home", FormMethod.Post))
        {
            <section id="contact" class="">
                <div class="">
                    <div class="row d-flex justify-content-center">
                        <div class="center">
                            <div class="">
                                <div class="head_title">
                                    <h2 align="center">Registration form</h2>
                                    <h5 align="center">
                                        <em>
                                            Keep in mind that all of the fields are mandatory.
                                        </em>
                                    </h5>
                                    <div style="text-align: center;">
                                        <span style="display:block; font-size: 15px; color: red">
                                            @ViewBag.Message
                                        </span>
                                    </div>
                                    <div class="separator_left" style="width:100%"></div>
                                </div>
                            </div><!-- End off Head Title -->
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.firstName, "First Name:", new { htmlAttributes = new { @class = "control-label" } })
                                <div class="input-group">
                                    <div class="input-group-prepend" >
                                        <span class="input-group-text"> <i class="fa fa-user"></i> </span>
                                    </div>
                                    @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control", @type = "text", @name = "full_name", @required = "" } })
                                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.lastName, "Last Name:", htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fa fa-user"></i> </span>
                                    </div>
                                    @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", @type = "text", @name = "username", @required = "" } })
                                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.phoneNumber, "Phone Number:", htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fa fa-phone"></i> </span>
                                    </div>
                                    @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control", @type = "tel", @required = "", @pattern = "^[+][0-9]+$" } })
                                    @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.emailAddress, "Email:", htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fa fa-envelope"></i> </span>
                                    </div>
                                    @Html.EditorFor(model => model.emailAddress, new { htmlAttributes = new { @class = "form-control", @type = "email", @required = "", pattern = "[^@\\s]+@[^@\\s]+\\.[^@\\s]+" } })
                                    @Html.ValidationMessageFor(model => model.emailAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.firstName, "Password:", htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fa fa-lock"></i> </span>
                                    </div>
                                    @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control", @name = "password", @id = "password", @required = "", @type = "password" } })
                                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.firstName, "Confirm Password:", htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fa fa-lock"></i> </span>
                                    </div>
                                    @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control", @name = "confirm_password", @id = "confirm_password", @required = "", @type = "password" } })
                                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                <div class="form-group">
                                    <div class="g-recaptcha" data-sitekey="6LfclX4UAAAAAOoRj6w5XvsTCz56eHzOppWnEszL" data-callback="callback"></div>
                                </div>
                                <div class="form-group">
                                    <input type="submit" id="registerButton" value="Register" class="btn btn-primary d-flex m-auto" disabled/>
                                </div>
                            </div>
                        </div><!--End off row -->
                    </div><!--End off container -->
                </div>
            </section><!--End off Contact Section-->
        }
    </div>
</body>
<!-- JS includes -->

<script src="~/Scripts/template/vendor/jquery-1.11.2.min.js"></script>
<script src="~/Scripts/template/jquery.easing.1.3.js"></script>
<script src="~/Scripts/template/isotope.min.js"></script>

<script src="~/Scripts/bootstrap.min.js"></script>

<script src="~/Scripts/template/jquery.magnific-popup.js"></script>

<script src="~/Scripts/template/slick.min.js"></script>
<script src="~/Scripts/template/jquery.collapse.js"></script>
<script src="~/Scripts/template/bootsnav.js"></script>

<script src="~/Scripts/template/plugins.js"></script>
<script src="~/Scripts/template/main.js"></script>

<script>
    $('#password, #confirm_password').on('keyup', function () {
        if ($('#password').val() === $('#confirm_password').val() && $('#password').val() !== "" && $('#confirm_password').val() !== "") {
            $('#password').css('border-color', 'green');
            $('#confirm_password').css('border-color', 'green');
        } else if ($('#password').val() === "" || $('#confirm_password').val() === "") {
            $('#password').css('border-color', '');
            $('#confirm_password').css('border-color', '');
        } else {
            $('#password').css('border-color', 'red');
            $('#confirm_password').css('border-color', 'red');
        }
    });
</script>
<script>
    function callback(){
        if(grecaptcha.getResponse().length !== 0){
            document.getElementById("registerButton").disabled = false;
        }
    }
</script>
@Html.ActionLink("HomeLink", "Index", "Home", null, null)